{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/@firebase/util/dist/index.esm2017.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@firebase/component/dist/esm/index.esm2017.js","webpack:///./node_modules/@firebase/logger/dist/esm/index.esm2017.js","webpack:///./node_modules/@firebase/app/dist/esm/index.esm2017.js","webpack:///./node_modules/firebase/app/dist/index.esm.js","webpack:///./node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js","webpack:///./src/firebase.js","webpack:///./src/functionsFB.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptors.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","stringToByteArray$1","str","out","p","i","length","c","charCodeAt","byteArrayToString","bytes","pos","c1","String","fromCharCode","c2","c3","c4","u","join","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","HAS_NATIVE_SUPPORT","atob","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","btoa","encodeByteArray","decodeStringToByteArray","charToByteMap","charAt","haveByte4","byte4","ENCODED_VALS","ENCODED_VALS_WEBSAFE","base64Encode","utf8Bytes","base64urlEncodeWithoutPadding","replace","Deferred","promise","callback","catch","createMockUserToken","token","projectId","uid","header","alg","type","project","iat","sub","user_id","payload","Object","assign","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","signature","JSON","stringify","ERROR_NAME","FirebaseError","code","message","customData","super","name","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","replaceTemplate","fullMessage","PATTERN","_","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","getModularInstance","_delegate","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","Component","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","mode","DEFAULT_ENTRY_NAME","container","component","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","has","deferred","set","isInitialized","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","e","get","options","_a","optional","isComponentEager","instanceDeferred","entries","delete","services","from","values","all","filter","map","INTERNAL","_delete","opts","isComponentSet","normalizedDeferredIdentifier","existingCallbacks","Set","add","existingInstance","callbacks","normalizeIdentifierForFactory","invokeOnInitCallbacks","ComponentContainer","providers","provider","getProvider","setComponent","addComponent","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","logLevel","now","Date","toISOString","method","console","Logger","_logLevel","_logHandler","_userLogHandler","val","PlatformLoggerServiceImpl","getProviders","isVersionServiceProvider","getImmediate","library","version","logString","getComponent","name$o","version$1","logger","name$n","name$m","name$l","name$k","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$2","name$1","PLATFORM_LOG_STRING","_apps","_components","_addComponent","app","debug","_registerComponent","componentName","_getProvider","ERRORS","ERROR_FACTORY","config","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","SDK_VERSION","initializeApp","rawConfig","existingApp","newApp","getApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","match","versionMismatch","warning","warn","registerCoreComponents","t","isAuthenticated","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","w","n","y","m","g","v","E","T","I","A","P","V","D","N","$","F","S","q","x","O","L","toString","j","user","authHeaders","Authorization","enqueueRetryable","M","auth","onInit","getToken","accessToken","getUid","Q","o","getAuthHeaderValueForFirstParty","z","G","r","s","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","W","database","H","segments","offset","len","comparator","slice","limit","forEach","construct","Math","min","Y","toArray","canonicalString","indexOf","split","K","J","test","isValidIdentifier","Z","path","fromString","popFirst","X","tt","isDocumentKey","et","nt","substring","constructor","rt","it","ot","ut","BatchGetDocuments","Commit","RunQuery","ct","at","ht","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","lt","databaseInfo","h","l","hasOwnProperty","headers","body","status","statusText","ok","json","ft","crypto","msCrypto","Uint8Array","getRandomValues","floor","random","dt","wt","mt","every","pt","seconds","nanoseconds","fromMillis","getTime","toMillis","padStart","yt","timestamp","_compareTo","isEqual","_t","call","gt","vt","binaryString","EMPTY_BYTE_STRING","Et","RegExp","Tt","exec","substr","Number","nanos","It","At","fromBase64String","fromUint8Array","Pt","mapValue","fields","__type__","stringValue","Rt","__previous_value__","Vt","__local_write_time__","timestampValue","Dt","Nt","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","$t","find","Ft","St","compareTo","sort","qt","xt","Ot","Ct","Lt","Ut","jt","isEmpty","lastSegment","getFieldsMap","popLast","emptyPath","isImmediateParentOf","applyChanges","field","kt","documentType","documentState","empty","hasLocalMutations","hasCommittedMutations","clone","Bt","collectionGroup","orderBy","filters","startAt","endAt","Mt","Qt","op","isKeyField","R","zt","Yt","Kt","Jt","Zt","Gt","Wt","fromName","Ht","some","nullValue","Xt","position","before","te","dir","re","explicitOrderBy","limitType","se","ie","oe","ue","ce","keyField","ae","le","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Ie","asc","desc","Ae","in","Pe","Re","Ve","toBase64","toUint8Array","Ne","fromTimestamp","$e","child","Fe","Se","ze","qe","xe","Ce","found","updateTime","newFoundDocument","missing","readTime","newNoDocument","Ue","structuredQuery","parent","collectionId","allDescendants","unaryFilter","Me","fieldFilter","Be","compositeFilter","where","direction","ke","je","fieldPath","Ge","He","credentials","invalidateToken","async","Ke","documents","Je","document","setHasCommittedMutations","Ze","Xe","_terminated","fetch","bind","_databaseId","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_credentials","tn","ignoreUndefinedProperties","cacheSizeBytes","en","_settings","_settingsFrozen","_app","_terminateTask","client","sessionIndex","iamToken","_terminate","settings","terminate","rn","un","converter","_key","firestore","an","cn","_query","_path","hn","mn","_internalPath","yn","_byteString","_n","_methodName","gn","isFinite","_lat","_long","bn","Tn","In","fieldTransforms","fieldMask","Qn","methodName","isPrefixOf","An","Pn","On","Cn","Un","jn","Ln","_toFieldTransform","fromDate","getPrototypeOf","Bn","Mn","search","Gn","_firestore","_userDataWriter","_document","_converter","Wn","fromFirestore","convertValue","Kn","Hn","_docs","query","docs","Jn","Zn","_apply","Xn","wr","dr","mr","concat","tr","yr","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","_r","isFoundDocument","gr","reverse","_setSettings","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","measurementId","fireDb","getFirestore","functionsFirebase","coleccion","collection","condition","loadCollection","colecion","getDocs","queryWithCollection","id","getDoc","doc","documento","_defineProperty","obj","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","source","getOwnPropertyDescriptors","defineProperties","runtime","exports","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","makeInvokeMethod","tryCatch","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","__proto__","awrap","iter","pop","skipTempReset","prev","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","DESCRIPTORS","toIndexedObject","getOwnPropertyDescriptorModule","createProperty","stat","sham","f","index","fails","nativeGetOwnPropertyDescriptor","FAILS_ON_PRIMITIVES","FORCED","forced"],"mappings":"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","file":"js/chunk-707a4942.88a046da.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nconst CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nconst assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nconst assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    const header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    const project = projectId || 'demo-project';\r\n    const iat = token.iat || 0;\r\n    const sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    const payload = Object.assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    const signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    const runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    const ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    return typeof indexedDB === 'object';\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if (e.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(code, message, customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst decode = function (token) {\r\n    let header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        const parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header,\r\n        claims,\r\n        data,\r\n        signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidTimestamp = function (token) {\r\n    const claims = decode(token).claims;\r\n    const now = Math.floor(new Date().getTime() / 1000);\r\n    let validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst issuedAtTime = function (token) {\r\n    const claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidFormat = function (token) {\r\n    const decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isAdmin = function (token) {\r\n    const claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    const res = {};\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    const params = [];\r\n    for (const [key, value] of Object.entries(querystringParams)) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(arrayVal => {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    const obj = {};\r\n    const tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(token => {\r\n        if (token) {\r\n            const [key, value] = token.split('=');\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    const queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    const fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nclass Sha1 {\r\n    constructor() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (let i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    }\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    compress_(buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        const W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (let i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (let i = 16; i < 80; i++) {\r\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        let a = this.chain_[0];\r\n        let b = this.chain_[1];\r\n        let c = this.chain_[2];\r\n        let d = this.chain_[3];\r\n        let e = this.chain_[4];\r\n        let f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (let i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    }\r\n    update(bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        const lengthMinusBlock = length - this.blockSize;\r\n        let n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        const buf = this.buf_;\r\n        let inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    }\r\n    /** @override */\r\n    digest() {\r\n        const digest = [];\r\n        let totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (let i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        let n = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n            for (let j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    }\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    const proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nclass ObserverProxy {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    constructor(executor, onNoObservers) {\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(() => {\r\n            executor(this);\r\n        })\r\n            .catch(e => {\r\n            this.error(e);\r\n        });\r\n    }\r\n    next(value) {\r\n        this.forEachObserver((observer) => {\r\n            observer.next(value);\r\n        });\r\n    }\r\n    error(error) {\r\n        this.forEachObserver((observer) => {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    }\r\n    complete() {\r\n        this.forEachObserver((observer) => {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    }\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    subscribe(nextOrObserver, error, complete) {\r\n        let observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error,\r\n                complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(() => {\r\n                try {\r\n                    if (this.finalError) {\r\n                        observer.error(this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    }\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    unsubscribeOne(i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    }\r\n    forEachObserver(fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (let i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    }\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    sendOne(i, fn) {\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    close(err) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            this.observers = undefined;\r\n            this.onNoObservers = undefined;\r\n        });\r\n    }\r\n}\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return (...args) => {\r\n        Promise.resolve(true)\r\n            .then(() => {\r\n            fn(...args);\r\n        })\r\n            .catch((error) => {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (const method of methods) {\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    let argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        const error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return `${fnName} failed: ${argName} argument `;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nconst stringToByteArray = function (str) {\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            const high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nconst stringLength = function (str) {\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        const c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nconst DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nconst DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    const randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return `${i}`;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    const cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    const dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\nexport { CONSTANTS, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, issuedAtTime, jsonEval, map, ordinal, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm2017.js.map\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm2017.js.map\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, deepEqual } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.7.8\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"9.4.1\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"bad-app-name\" /* BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(options, rawConfig = {}) {\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$o, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"9.4.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","import { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { createMockUserToken, getModularInstance } from '@firebase/util';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass h {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ h.UNAUTHENTICATED = new h(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nh.GOOGLE_CREDENTIALS = new h(\"google-credentials-uid\"), h.FIRST_PARTY = new h(\"first-party-uid\"), \nh.MOCK_USER = new h(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet l = \"9.4.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst f = new Logger(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function d(t) {\n    f.setLogLevel(t);\n}\n\nfunction w(t, ...e) {\n    if (f.logLevel <= LogLevel.DEBUG) {\n        const n = e.map(y);\n        f.debug(`Firestore (${l}): ${t}`, ...n);\n    }\n}\n\nfunction m(t, ...e) {\n    if (f.logLevel <= LogLevel.ERROR) {\n        const n = e.map(y);\n        f.error(`Firestore (${l}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function p(t, ...e) {\n    if (f.logLevel <= LogLevel.WARN) {\n        const n = e.map(y);\n        f.warn(`Firestore (${l}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function y(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function _(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${l}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw m(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function g(t, e) {\n    t || _();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function b(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const v = \"ok\", E = \"cancelled\", T = \"unknown\", I = \"invalid-argument\", A = \"deadline-exceeded\", P = \"not-found\", R = \"already-exists\", V = \"permission-denied\", D = \"unauthenticated\", N = \"resource-exhausted\", $ = \"failed-precondition\", F = \"aborted\", S = \"out-of-range\", q = \"unimplemented\", x = \"internal\", O = \"unavailable\", C = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class L extends Error {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(e), this.code = t, this.message = e, \n        /** The custom name for all FirestoreErrors. */\n        this.name = \"FirebaseError\", \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class U {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.authHeaders = {}, \n        // Set the headers using Object Literal notation to avoid minification\n        this.authHeaders.Authorization = `Bearer ${t}`;\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class k {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(h.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class B {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class M {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (g(\"string\" == typeof t.accessToken), \n        new j(t.accessToken, new h(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class Q {\n    constructor(t, e, n) {\n        this.t = t, this.i = e, this.o = n, this.type = \"FirstParty\", this.user = h.FIRST_PARTY;\n    }\n    get authHeaders() {\n        const t = {\n            \"X-Goog-AuthUser\": this.i\n        }, e = this.t.auth.getAuthHeaderValueForFirstParty([]);\n        // Use array notation to prevent minification\n                return e && (t.Authorization = e), this.o && (t[\"X-Goog-Iam-Authorization-Token\"] = this.o), \n        t;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class z {\n    constructor(t, e, n) {\n        this.t = t, this.i = e, this.o = n;\n    }\n    getToken() {\n        return Promise.resolve(new Q(this.t, this.i, this.o));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(h.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass G {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass W {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof W && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass H {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && _(), void 0 === n ? n = t.length - e : n > t.length - e && _(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === H.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof H ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class Y extends H {\n    construct(t, e, n) {\n        return new Y(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new L(I, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new Y(e);\n    }\n    static emptyPath() {\n        return new Y([]);\n    }\n}\n\nconst K = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class J extends H {\n    construct(t, e, n) {\n        return new J(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return K.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        J.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new J([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new L(I, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new L(I, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new L(I, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new L(I, \"Unterminated ` in path: \" + t);\n        return new J(e);\n    }\n    static emptyPath() {\n        return new J([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class Z {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new Z(Y.fromString(t));\n    }\n    static fromName(t) {\n        return new Z(Y.fromString(t).popFirst(5));\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    isEqual(t) {\n        return null !== t && 0 === Y.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return Y.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new Z(new Y(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function X(t, e, n) {\n    if (!n) throw new L(I, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction tt(t) {\n    if (!Z.isDocumentKey(t)) throw new L(I, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function et(t) {\n    if (Z.isDocumentKey(t)) throw new L(I, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction nt(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : _();\n}\n\nfunction rt(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new L(I, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = nt(t);\n            throw new L(I, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction st(t, e) {\n    if (e <= 0) throw new L(I, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function it(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function ot(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ut = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar ct, at;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction ht(t) {\n    if (void 0 === t) return m(\"RPC_ERROR\", \"HTTP error has no status\"), T;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return v;\n\n      case 400:\n        // Bad Request\n        return $;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return D;\n\n      case 403:\n        // Forbidden\n        return V;\n\n      case 404:\n        // Not Found\n        return P;\n\n      case 409:\n        // Conflict\n        return F;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return S;\n\n      case 429:\n        // Too Many Requests\n        return N;\n\n      case 499:\n        // Client Closed Request\n        return E;\n\n      case 500:\n        // Internal Server Error\n        return T;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return q;\n\n      case 503:\n        // Service Unavailable\n        return O;\n\n      case 504:\n        // Gateway Timeout\n        return A;\n\n      default:\n        return t >= 200 && t < 300 ? v : t >= 400 && t < 500 ? $ : t >= 500 && t < 600 ? x : T;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (at = ct || (ct = {}))[at.OK = 0] = \"OK\", at[at.CANCELLED = 1] = \"CANCELLED\", \nat[at.UNKNOWN = 2] = \"UNKNOWN\", at[at.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nat[at.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", at[at.NOT_FOUND = 5] = \"NOT_FOUND\", \nat[at.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", at[at.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nat[at.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", at[at.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nat[at.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", at[at.ABORTED = 10] = \"ABORTED\", \nat[at.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", at[at.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nat[at.INTERNAL = 13] = \"INTERNAL\", at[at.UNAVAILABLE = 14] = \"UNAVAILABLE\", at[at.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass lt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.u = e + \"://\" + t.host, this.h = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    l(t, e, n, r) {\n        const s = this.m(t, e);\n        w(\"RestConnection\", \"Sending: \", s, n);\n        const i = {};\n        return this.p(i, r), this.g(t, s, i, n).then((t => (w(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw p(\"RestConnection\", `${t} failed with error: `, e, \"url: \", s, \"request:\", n), \n            e;\n        }));\n    }\n    v(t, e, n, r) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.l(t, e, n, r);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    p(t, e) {\n        if (t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + l, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e) for (const n in e.authHeaders) e.authHeaders.hasOwnProperty(n) && (t[n] = e.authHeaders[n]);\n    }\n    m(t, e) {\n        const n = ut[t];\n        return `${this.u}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.T = e;\n    }\n    I(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async g(t, e, n, r) {\n        const s = JSON.stringify(r);\n        let i;\n        try {\n            i = await this.T(e, {\n                method: \"POST\",\n                headers: n,\n                body: s\n            });\n        } catch (t) {\n            throw new L(ht(t.status), \"Request failed with error: \" + t.statusText);\n        }\n        if (!i.ok) throw new L(ht(i.status), \"Request failed with error: \" + i.statusText);\n        return i.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction ft(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class dt {\n    static A() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = ft(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction wt(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function mt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass pt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new L(I, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new L(I, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new L(I, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new L(I, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return pt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return pt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new pt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? wt(this.nanoseconds, t.nanoseconds) : wt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class yt {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new yt(t);\n    }\n    static min() {\n        return new yt(new pt(0, 0));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function _t(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction gt(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\nclass bt {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(J.comparator);\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return mt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass vt {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new vt(e);\n    }\n    static fromUint8Array(t) {\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new vt(e);\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return wt(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nvt.EMPTY_BYTE_STRING = new vt(\"\");\n\nconst Et = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function Tt(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (g(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Et.exec(t);\n        if (g(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: It(t.seconds),\n        nanos: It(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function It(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function At(t) {\n    return \"string\" == typeof t ? vt.fromBase64String(t) : vt.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function Pt(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Rt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return Pt(e) ? Rt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Vt(t) {\n    const e = Tt(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new pt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Extracts the backend's type order for the provided value. */ function Dt(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? Pt(t) ? 4 /* ServerTimestampValue */ : 10 /* ObjectValue */ : _();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Nt(t, e) {\n    const n = Dt(t);\n    if (n !== Dt(e)) return !1;\n    switch (n) {\n      case 0 /* NullValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return Vt(t).isEqual(Vt(e));\n\n      case 3 /* TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = Tt(t.timestampValue), r = Tt(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            return At(t.bytesValue).isEqual(At(e.bytesValue));\n        }(t, e);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            return It(t.geoPointValue.latitude) === It(e.geoPointValue.latitude) && It(t.geoPointValue.longitude) === It(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return It(t.integerValue) === It(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = It(t.doubleValue), r = It(e.doubleValue);\n                return n === r ? ot(n) === ot(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* ArrayValue */ :\n        return mt(t.arrayValue.values || [], e.arrayValue.values || [], Nt);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (_t(n) !== _t(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Nt(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return _();\n    }\n}\n\nfunction $t(t, e) {\n    return void 0 !== (t.values || []).find((t => Nt(t, e)));\n}\n\nfunction Ft(t, e) {\n    const n = Dt(t), r = Dt(e);\n    if (n !== r) return wt(n, r);\n    switch (n) {\n      case 0 /* NullValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return wt(t.booleanValue, e.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            const n = It(t.integerValue || t.doubleValue), r = It(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TimestampValue */ :\n        return St(t.timestampValue, e.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return St(Vt(t), Vt(e));\n\n      case 5 /* StringValue */ :\n        return wt(t.stringValue, e.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            const n = At(t), r = At(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = wt(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return wt(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            const n = wt(It(t.latitude), It(e.latitude));\n            if (0 !== n) return n;\n            return wt(It(t.longitude), It(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ft(n[t], r[t]);\n                if (e) return e;\n            }\n            return wt(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = wt(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ft(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return wt(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw _();\n    }\n}\n\nfunction St(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return wt(t, e);\n    const n = Tt(t), r = Tt(e), s = wt(n.seconds, r.seconds);\n    return 0 !== s ? s : wt(n.nanos, r.nanos);\n}\n\nfunction qt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function xt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Ot(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Ct(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Lt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Ut(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return gt(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Ut(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Ut(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class jt {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new jt({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Lt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Ut(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = J.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Ut(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Lt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Nt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Lt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        gt(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new jt(Ut(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class kt {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.documentType = e, this.version = n, this.data = r, this.documentState = s;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new kt(t, 0 /* INVALID */ , yt.min(), jt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n) {\n        return new kt(t, 1 /* FOUND_DOCUMENT */ , e, n, 0 /* SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new kt(t, 2 /* NO_DOCUMENT */ , e, jt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new kt(t, 3 /* UNKNOWN_DOCUMENT */ , e, jt.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = jt.empty(), \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = jt.empty(), \n        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this;\n    }\n    get hasLocalMutations() {\n        return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof kt && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    clone() {\n        return new kt(this.key, this.documentType, this.version, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass Bt {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.P = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function Mt(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new Bt(t, e, n, r, s, i, o);\n}\n\nclass Qt extends class {} {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* IN */ === e || \"not-in\" /* NOT_IN */ === e ? this.R(t, e, n) : new zt(t, e, n) : \"array-contains\" /* ARRAY_CONTAINS */ === e ? new Yt(t, n) : \"in\" /* IN */ === e ? new Kt(t, n) : \"not-in\" /* NOT_IN */ === e ? new Jt(t, n) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === e ? new Zt(t, n) : new Qt(t, e, n);\n    }\n    static R(t, e, n) {\n        return \"in\" /* IN */ === e ? new Gt(t, n) : new Wt(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== e && this.V(Ft(e, this.value)) : null !== e && Dt(this.value) === Dt(e) && this.V(Ft(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    V(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return _();\n        }\n    }\n    D() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nclass zt extends Qt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = Z.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = Z.comparator(t.key, this.key);\n        return this.V(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Gt extends Qt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e), this.keys = Ht(\"in\" /* IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class Wt extends Qt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e), this.keys = Ht(\"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction Ht(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => Z.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class Yt extends Qt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return xt(e) && $t(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class Kt extends Qt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && $t(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class Jt extends Qt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        if ($t(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !$t(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class Zt extends Qt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!xt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => $t(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ class Xt {\n    constructor(t, e) {\n        this.position = t, this.before = e;\n    }\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class te {\n    constructor(t, e = \"asc\" /* ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction ee(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction ne(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.before !== e.before || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Nt(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ class re {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.N = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.$ = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function se(t) {\n    return !it(t.limit) && \"L\" /* Last */ === t.limitType;\n}\n\nfunction ie(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction oe(t) {\n    for (const e of t.filters) if (e.D()) return e.field;\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ue(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function ce(t) {\n    const e = b(t);\n    if (null === e.N) {\n        e.N = [];\n        const t = oe(e), n = ie(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.N.push(new te(t)), e.N.push(new te(J.keyField(), \"asc\" /* ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.N.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n                e.N.push(new te(J.keyField(), t));\n            }\n        }\n    }\n    return e.N;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function ae(t) {\n    const e = b(t);\n    if (!e.$) if (\"F\" /* First */ === e.limitType) e.$ = Mt(e.path, e.collectionGroup, ce(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of ce(e)) {\n            const e = \"desc\" /* DESCENDING */ === n.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            t.push(new te(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Xt(e.endAt.position, !e.endAt.before) : null, r = e.startAt ? new Xt(e.startAt.position, !e.startAt.before) : null;\n        // Now return as a LimitType.First query.\n        e.$ = Mt(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.$;\n}\n\nfunction he(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!ee(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let s = 0; s < t.filters.length; s++) if (n = t.filters[s], r = e.filters[s], \n        n.op !== r.op || !n.field.isEqual(r.field) || !Nt(n.value, r.value)) return !1;\n        var n, r;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!ne(t.startAt, e.startAt) && ne(t.endAt, e.endAt);\n    }(ae(t), ae(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction le(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !ot(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.F) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: ot(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class fe {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class de extends fe {}\n\n/** Transforms an array value via a union operation. */ class we extends fe {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class me extends fe {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class pe extends fe {\n    constructor(t, e) {\n        super(), this.S = t, this.q = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class ye {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class _e {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new _e;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new _e(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new _e(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class ge {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class be extends ge {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* Set */;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class ve extends ge {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* Patch */;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Ee extends ge {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* Delete */ , this.fieldTransforms = [];\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class Te extends ge {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* Verify */ , this.fieldTransforms = [];\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ie = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Ae = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Pe {\n    constructor(t, e) {\n        this.databaseId = t, this.F = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction Re(t, e) {\n    if (t.F) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ve(t, e) {\n    return t.F ? e.toBase64() : e.toUint8Array();\n}\n\nfunction De(t, e) {\n    return Re(t, e.toTimestamp());\n}\n\nfunction Ne(t) {\n    return g(!!t), yt.fromTimestamp(function(t) {\n        const e = Tt(t);\n        return new pt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction $e(t, e) {\n    return function(t) {\n        return new Y([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Fe(t, e) {\n    return $e(t.databaseId, e.path);\n}\n\nfunction Se(t, e) {\n    const n = function(t) {\n        const e = Y.fromString(t);\n        return g(ze(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new L(I, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new L(I, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new Z((g((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction qe(t, e) {\n    return $e(t.databaseId, e);\n}\n\nfunction xe(t) {\n    return new Y([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Oe(t, e, n) {\n    return {\n        name: Fe(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction Ce(t, e) {\n    return \"found\" in e ? function(t, e) {\n        g(!!e.found), e.found.name, e.found.updateTime;\n        const n = Se(t, e.found.name), r = Ne(e.found.updateTime), s = new jt({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return kt.newFoundDocument(n, r, s);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        g(!!e.missing), g(!!e.readTime);\n        const n = Se(t, e.missing), r = Ne(e.readTime);\n        return kt.newNoDocument(n, r);\n    }(t, e) : _();\n}\n\nfunction Le(t, e) {\n    let n;\n    if (e instanceof be) n = {\n        update: Oe(t, e.key, e.value)\n    }; else if (e instanceof Ee) n = {\n        delete: Fe(t, e.key)\n    }; else if (e instanceof ve) n = {\n        update: Oe(t, e.key, e.data),\n        updateMask: Qe(e.fieldMask)\n    }; else {\n        if (!(e instanceof Te)) return _();\n        n = {\n            verify: Fe(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof de) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof we) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof me) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof pe) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.q\n        };\n        throw _();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: De(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : _();\n    }(t, e.precondition)), n;\n}\n\nfunction Ue(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = qe(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = qe(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        const e = t.map((t => \n        // visible for testing\n        function(t) {\n            if (\"==\" /* EQUAL */ === t.op) {\n                if (Ct(t.value)) return {\n                    unaryFilter: {\n                        field: Me(t.field),\n                        op: \"IS_NAN\"\n                    }\n                };\n                if (Ot(t.value)) return {\n                    unaryFilter: {\n                        field: Me(t.field),\n                        op: \"IS_NULL\"\n                    }\n                };\n            } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                if (Ct(t.value)) return {\n                    unaryFilter: {\n                        field: Me(t.field),\n                        op: \"IS_NOT_NAN\"\n                    }\n                };\n                if (Ot(t.value)) return {\n                    unaryFilter: {\n                        field: Me(t.field),\n                        op: \"IS_NOT_NULL\"\n                    }\n                };\n            }\n            return {\n                fieldFilter: {\n                    field: Me(t.field),\n                    op: Be(t.op),\n                    value: t.value\n                }\n            };\n        }(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: \"AND\",\n                filters: e\n            }\n        };\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: Me(t.field),\n                direction: ke(t.dir)\n            };\n        }(t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.F || it(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = je(e.startAt)), \n    e.endAt && (n.structuredQuery.endAt = je(e.endAt)), n;\n}\n\nfunction je(t) {\n    return {\n        before: t.before,\n        values: t.position\n    };\n}\n\n// visible for testing\nfunction ke(t) {\n    return Ie[t];\n}\n\n// visible for testing\nfunction Be(t) {\n    return Ae[t];\n}\n\nfunction Me(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction Qe(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction ze(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Ge(t) {\n    return new Pe(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass We {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.O = t, this.timerId = e, this.C = n, this.L = r, this.U = s, this.j = 0, this.k = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.B = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.j = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    M() {\n        this.j = this.U;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    G(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.j + this.W()), n = Math.max(0, Date.now() - this.B), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && w(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.j} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.k = this.O.enqueueAfterDelay(this.timerId, r, (() => (this.B = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.j *= this.L, this.j < this.C && (this.j = this.C), this.j > this.U && (this.j = this.U);\n    }\n    H() {\n        null !== this.k && (this.k.skipDelay(), this.k = null);\n    }\n    cancel() {\n        null !== this.k && (this.k.cancel(), this.k = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    W() {\n        return (Math.random() - .5) * this.j;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass He extends class {} {\n    constructor(t, e, n) {\n        super(), this.credentials = t, this.Y = e, this.S = n, this.K = !1;\n    }\n    J() {\n        if (this.K) throw new L($, \"The client has already been terminated.\");\n    }\n    /** Gets an auth token and invokes the provided RPC. */    l(t, e, n) {\n        return this.J(), this.credentials.getToken().then((r => this.Y.l(t, e, n, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === D && this.credentials.invalidateToken(), \n            t) : new L(T, t.toString());\n        }));\n    }\n    /** Gets an auth token and invokes the provided RPC with streamed results. */    v(t, e, n) {\n        return this.J(), this.credentials.getToken().then((r => this.Y.v(t, e, n, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === D && this.credentials.invalidateToken(), \n            t) : new L(T, t.toString());\n        }));\n    }\n    terminate() {\n        this.K = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function Ye(t, e) {\n    const n = b(t), r = xe(n.S) + \"/documents\", s = {\n        writes: e.map((t => Le(n.S, t)))\n    };\n    await n.l(\"Commit\", r, s);\n}\n\nasync function Ke(t, e) {\n    const n = b(t), r = xe(n.S) + \"/documents\", s = {\n        documents: e.map((t => Fe(n.S, t)))\n    }, i = await n.v(\"BatchGetDocuments\", r, s), o = new Map;\n    i.forEach((t => {\n        const e = Ce(n.S, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        g(!!e), u.push(e);\n    })), u;\n}\n\nasync function Je(t, e) {\n    const n = b(t), r = Ue(n.S, ae(e));\n    return (await n.v(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Se(t, e.name), s = Ne(e.updateTime), i = new jt({\n            mapValue: {\n                fields: e.fields\n            }\n        }), o = kt.newFoundDocument(r, s, i);\n        return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n    }(n.S, t.document, void 0)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ze = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction Xe(t) {\n    if (t._terminated) throw new L($, \"The client has already been terminated.\");\n    if (!Ze.has(t)) {\n        w(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new lt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new G(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = Ge(t._databaseId), u = function(t, e, n) {\n            return new He(t, e, n);\n        }(t._credentials, i, o);\n        Ze.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return Ze.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass tn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new L(I, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new L(I, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new L(I, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */ class en {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._credentials = e, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new tn({}), \n        this._settingsFrozen = !1, t instanceof W ? this._databaseId = t : (this._app = t, \n        this._databaseId = function(t) {\n            if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new L(I, '\"projectId\" not provided in firebase.initializeApp.');\n            return new W(t.options.projectId);\n        }\n        /**\n * Initializes a new instance of Cloud Firestore with the provided settings.\n * Can only be called before any other functions, including\n * {@link getFirestore}. If the custom settings are empty, this function is\n * equivalent to calling {@link getFirestore}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n * be associated.\n * @param settings - A settings object to configure the `Firestore` instance.\n * @returns A newly initialized `Firestore` instance.\n */ (t));\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new L($, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new L($, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new tn(t), void 0 !== t.credentials && (this._credentials = function(t) {\n            if (!t) return new k;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                // Make sure this really is a Gapi client.\n                                return g(!(\"object\" != typeof e || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty)), \n                new z(e, t.sessionIndex || \"0\", t.iamToken || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new L(I, \"makeCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = Ze.get(t);\n            e && (w(\"ComponentProvider\", \"Removing Datastore\"), Ze.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction nn(t, e) {\n    const n = _getProvider(t, \"firestore/lite\");\n    if (n.isInitialized()) throw new L($, \"Firestore can only be initialized once per app.\");\n    return n.initialize({\n        options: e\n    });\n}\n\n/**\n * Returns the existing `Firestore` instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned `Firestore`\n * instance is associated with.\n * @returns The `Firestore` instance of the provided app.\n */ function rn(e = getApp()) {\n    return _getProvider(e, \"firestore/lite\").getImmediate();\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function sn(t, e, n, r = {}) {\n    var s;\n    const i = (t = rt(t, en))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && p(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = h.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new L(I, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new h(i);\n        }\n        t._credentials = new B(new j(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link getFirestore}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function on(t) {\n    return t = rt(t, en), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nclass un {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new an(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new un(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class cn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new cn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class an extends cn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new re(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new un(this.firestore, \n        /* converter= */ null, new Z(t));\n    }\n    withConverter(t) {\n        return new an(this.firestore, t, this._path);\n    }\n}\n\nfunction hn(t, e, ...n) {\n    if (t = getModularInstance(t), X(\"collection\", \"path\", e), t instanceof en) {\n        const r = Y.fromString(e, ...n);\n        return et(r), new an(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof un || t instanceof an)) throw new L(I, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(Y.fromString(e, ...n));\n        return et(r), new an(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function ln(t, e) {\n    if (t = rt(t, en), X(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new L(I, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new cn(t, \n    /* converter= */ null, \n    /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n    function(t) {\n        return new re(Y.emptyPath(), t);\n    }(e));\n}\n\nfunction fn(t, e, ...n) {\n    if (t = getModularInstance(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = dt.A()), X(\"doc\", \"path\", e), t instanceof en) {\n        const r = Y.fromString(e, ...n);\n        return tt(r), new un(t, \n        /* converter= */ null, new Z(r));\n    }\n    {\n        if (!(t instanceof un || t instanceof an)) throw new L(I, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(Y.fromString(e, ...n));\n        return tt(r), new un(t.firestore, t instanceof an ? t.converter : null, new Z(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function dn(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), (t instanceof un || t instanceof an) && (e instanceof un || e instanceof an) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function wn(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), t instanceof cn && e instanceof cn && (t.firestore === e.firestore && he(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class mn {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new L(I, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new J(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function pn() {\n    return new mn(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class yn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new yn(vt.fromBase64String(t));\n        } catch (t) {\n            throw new L(I, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new yn(vt.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class _n {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class gn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new L(I, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new L(I, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return wt(this._lat, t._lat) || wt(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const bn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class vn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new ve(t, this.data, this.fieldMask, e, this.fieldTransforms) : new be(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class En {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new ve(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Tn(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw _();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class In {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.S = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.Z(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get X() {\n        return this.settings.X;\n    }\n    /** Returns a new context with the specified settings overwritten. */    tt(t) {\n        return new In(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.S, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    et(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.tt({\n            path: n,\n            nt: !1\n        });\n        return r.rt(t), r;\n    }\n    st(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.tt({\n            path: n,\n            nt: !1\n        });\n        return r.Z(), r;\n    }\n    it(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.tt({\n            path: void 0,\n            nt: !0\n        });\n    }\n    ot(t) {\n        return Qn(t, this.settings.methodName, this.settings.ut || !1, this.path, this.settings.ct);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    Z() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.rt(this.path.get(t));\n    }\n    rt(t) {\n        if (0 === t.length) throw this.ot(\"Document fields must not be empty\");\n        if (Tn(this.X) && bn.test(t)) throw this.ot('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class An {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.S = n || Ge(t);\n    }\n    /** Creates a new top-level parse context. */    at(t, e, n, r = !1) {\n        return new In({\n            X: t,\n            methodName: e,\n            ct: n,\n            path: J.emptyPath(),\n            nt: !1,\n            ut: r\n        }, this.databaseId, this.S, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Pn(t) {\n    const e = t._freezeSettings(), n = Ge(t._databaseId);\n    return new An(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Rn(t, e, n, r, s, i = {}) {\n    const o = t.at(i.merge || i.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , e, n, s);\n    jn(\"Data must be an object, but it was:\", o, r);\n    const u = Ln(r, o);\n    let c, a;\n    if (i.merge) c = new bt(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = kn(e, r, n);\n            if (!o.contains(s)) throw new L(I, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            zn(t, s) || t.push(s);\n        }\n        c = new bt(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new vn(new jt(u), c, a);\n}\n\nclass Vn extends _n {\n    _toFieldTransform(t) {\n        if (2 /* MergeSet */ !== t.X) throw 1 /* Update */ === t.X ? t.ot(`${this._methodName}() can only appear at the top level of your update data`) : t.ot(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Vn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Dn(t, e, n) {\n    return new In({\n        X: 3 /* Argument */ ,\n        ct: e.settings.ct,\n        methodName: t._methodName,\n        nt: n\n    }, e.databaseId, e.S, e.ignoreUndefinedProperties);\n}\n\nclass Nn extends _n {\n    _toFieldTransform(t) {\n        return new ye(t.path, new de);\n    }\n    isEqual(t) {\n        return t instanceof Nn;\n    }\n}\n\nclass $n extends _n {\n    constructor(t, e) {\n        super(t), this.ht = e;\n    }\n    _toFieldTransform(t) {\n        const e = Dn(this, t, \n        /*array=*/ !0), n = this.ht.map((t => Cn(t, e))), r = new we(n);\n        return new ye(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Fn extends _n {\n    constructor(t, e) {\n        super(t), this.ht = e;\n    }\n    _toFieldTransform(t) {\n        const e = Dn(this, t, \n        /*array=*/ !0), n = this.ht.map((t => Cn(t, e))), r = new me(n);\n        return new ye(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Sn extends _n {\n    constructor(t, e) {\n        super(t), this.lt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new pe(t.S, le(t.S, this.lt));\n        return new ye(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function qn(t, e, n, r) {\n    const s = t.at(1 /* Update */ , e, n);\n    jn(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = jt.empty();\n    gt(r, ((t, r) => {\n        const u = Mn(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = getModularInstance(r);\n        const c = s.st(u);\n        if (r instanceof Vn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = Cn(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new bt(i);\n    return new En(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function xn(t, e, n, r, s, i) {\n    const o = t.at(1 /* Update */ , e, n), u = [ kn(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new L(I, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(kn(e, i[t])), c.push(i[t + 1]);\n    const h = [], l = jt.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!zn(h, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = getModularInstance(n);\n        const r = o.st(e);\n        if (n instanceof Vn) \n        // Add it to the field mask, but don't add anything to updateData.\n        h.push(e); else {\n            const t = Cn(n, r);\n            null != t && (h.push(e), l.set(e, t));\n        }\n    }\n    const f = new bt(h);\n    return new En(l, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function On(t, e, n, r = !1) {\n    return Cn(n, t.at(r ? 4 /* ArrayArgument */ : 3 /* Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function Cn(t, e) {\n    if (Un(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = getModularInstance(t))) return jn(\"Unsupported field value:\", e, t), Ln(t, e);\n    if (t instanceof _n) \n    // FieldValues usually parse into transforms (except FieldValue.delete())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Tn(e.X)) throw e.ot(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.ot(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.nt && 4 /* ArrayArgument */ !== e.X) throw e.ot(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = Cn(s, e.it(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = getModularInstance(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return le(e.S, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = pt.fromDate(t);\n            return {\n                timestampValue: Re(e.S, n)\n            };\n        }\n        if (t instanceof pt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new pt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: Re(e.S, n)\n            };\n        }\n        if (t instanceof gn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof yn) return {\n            bytesValue: Ve(e.S, t._byteString)\n        };\n        if (t instanceof un) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.ot(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: $e(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.ot(`Unsupported field value: ${nt(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction Ln(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? gt(t, ((t, r) => {\n        const s = Cn(r, e.et(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction Un(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof pt || t instanceof gn || t instanceof yn || t instanceof un || t instanceof _n);\n}\n\nfunction jn(t, e, n) {\n    if (!Un(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = nt(n);\n        throw \"an object\" === r ? e.ot(t + \" a custom object\") : e.ot(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function kn(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = getModularInstance(e)) instanceof mn) return e._internalPath;\n    if (\"string\" == typeof e) return Mn(t, e);\n    throw Qn(\"Field path arguments must be of type string or FieldPath.\", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const Bn = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function Mn(t, e, n) {\n    if (e.search(Bn) >= 0) throw Qn(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new mn(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw Qn(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction Qn(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new L(I, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function zn(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class Gn {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new un(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new Wn(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(Kn(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class Wn extends Gn {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class Hn {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function Yn(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), t instanceof Gn && e instanceof Gn ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof Hn && e instanceof Hn && (wn(t.query, e.query) && mt(t.docs, e.docs, Yn));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function Kn(t, e) {\n    return \"string\" == typeof e ? Mn(t, e) : e instanceof mn ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass Jn {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function Zn(t, ...e) {\n    for (const n of e) t = n._apply(t);\n    return t;\n}\n\nclass Xn extends Jn {\n    constructor(t, e, n) {\n        super(), this.ft = t, this.dt = e, this.wt = n, this.type = \"where\";\n    }\n    _apply(t) {\n        const e = Pn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === i || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === i) throw new L(I, `Invalid Query. You can't perform '${i}' queries on FieldPath.documentId().`);\n                if (\"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i) {\n                    wr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(dr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = dr(r, t, o);\n            } else \"in\" /* IN */ !== i && \"not-in\" /* NOT_IN */ !== i && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== i || wr(o, i), \n            u = On(n, e, o, \n            /* allowArrays= */ \"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i);\n            const c = Qt.create(s, i, u);\n            return function(t, e) {\n                if (e.D()) {\n                    const n = oe(t);\n                    if (null !== n && !n.isEqual(e.field)) throw new L(I, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n                    const r = ie(t);\n                    null !== r && mr(t, e.field, r);\n                }\n                const n = function(t, e) {\n                    for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(e.op));\n                if (null !== n) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw n === e.op ? new L(I, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new L(I, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n            }(t, c), c;\n        }(t._query, \"where\", e, t.firestore._databaseId, this.ft, this.dt, this.wt);\n        return new cn(t.firestore, t.converter, function(t, e) {\n            const n = t.filters.concat([ e ]);\n            return new re(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, n));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */ function tr(t, e, n) {\n    const r = e, s = Kn(\"where\", t);\n    return new Xn(s, r, n);\n}\n\nclass er extends Jn {\n    constructor(t, e) {\n        super(), this.ft = t, this.yt = e, this.type = \"orderBy\";\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new L(I, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new L(I, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new te(e, n);\n            return function(t, e) {\n                if (null === ie(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = oe(t);\n                    null !== n && mr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this.ft, this.yt);\n        return new cn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new re(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */ function nr(t, e = \"asc\") {\n    const n = e, r = Kn(\"orderBy\", t);\n    return new er(r, n);\n}\n\nclass rr extends Jn {\n    constructor(t, e, n) {\n        super(), this.type = t, this._t = e, this.gt = n;\n    }\n    _apply(t) {\n        return new cn(t.firestore, t.converter, function(t, e, n) {\n            return new re(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._t, this.gt));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function sr(t) {\n    return st(\"limit\", t), new rr(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function ir(t) {\n    return st(\"limitToLast\", t), new rr(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass or extends Jn {\n    constructor(t, e, n) {\n        super(), this.type = t, this.bt = e, this.vt = n;\n    }\n    _apply(t) {\n        const e = fr(t, this.type, this.bt, this.vt);\n        return new cn(t.firestore, t.converter, function(t, e) {\n            return new re(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction ur(...t) {\n    return new or(\"startAt\", t, /*before=*/ !0);\n}\n\nfunction cr(...t) {\n    return new or(\"startAfter\", t, \n    /*before=*/ !1);\n}\n\nclass ar extends Jn {\n    constructor(t, e, n) {\n        super(), this.type = t, this.bt = e, this.vt = n;\n    }\n    _apply(t) {\n        const e = fr(t, this.type, this.bt, this.vt);\n        return new cn(t.firestore, t.converter, function(t, e) {\n            return new re(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction hr(...t) {\n    return new ar(\"endBefore\", t, /*before=*/ !0);\n}\n\nfunction lr(...t) {\n    return new ar(\"endAt\", t, /*before=*/ !1);\n}\n\n/** Helper function to create a bound from a document or fields */ function fr(t, e, n, r) {\n    if (n[0] = getModularInstance(n[0]), n[0] instanceof Gn) return function(t, e, n, r, s) {\n        if (!r) throw new L(P, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of ce(t)) if (n.field.isKeyField()) i.push(qt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (Pt(t)) throw new L(I, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new L(I, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Xt(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Pn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new L(I, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new L(I, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!ue(t) && -1 !== c.indexOf(\"/\")) throw new L(I, `Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(Y.fromString(c));\n                    if (!Z.isDocumentKey(n)) throw new L(I, `Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new Z(n);\n                    u.push(qt(e, s));\n                } else {\n                    const t = On(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Xt(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction dr(t, e, n) {\n    if (\"string\" == typeof (n = getModularInstance(n))) {\n        if (\"\" === n) throw new L(I, \"Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!ue(e) && -1 !== n.indexOf(\"/\")) throw new L(I, `Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(Y.fromString(n));\n        if (!Z.isDocumentKey(r)) throw new L(I, `Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return qt(t, new Z(r));\n    }\n    if (n instanceof un) return qt(t, n._key);\n    throw new L(I, `Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: ${nt(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function wr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new L(I, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new L(I, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction mr(t, e, n) {\n    if (!n.isEqual(e)) throw new L(I, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction pr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass yr extends class {\n    convertValue(t, e = \"none\") {\n        switch (Dt(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return It(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.convertBytes(At(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw _();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return gt(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new gn(It(t.latitude), It(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = Rt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Vt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = Tt(t);\n        return new pt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = Y.fromString(t);\n        g(ze(n));\n        const r = new W(n.get(1), n.get(3)), s = new Z(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        m(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new yn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new un(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function _r(t) {\n    const e = Xe((t = rt(t, un)).firestore), n = new yr(t.firestore);\n    return Ke(e, [ t._key ]).then((e => {\n        g(1 === e.length);\n        const r = e[0];\n        return new Gn(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function gr(t) {\n    !function(t) {\n        if (se(t) && 0 === t.explicitOrderBy.length) throw new L(q, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = rt(t, cn))._query);\n    const e = Xe(t.firestore), n = new yr(t.firestore);\n    return Je(e, t._query).then((e => {\n        const r = e.map((e => new Wn(t.firestore, n, e.key, e, t.converter)));\n        return se(t._query) && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new Hn(t, r);\n    }));\n}\n\nfunction br(t, e, n) {\n    const r = pr((t = rt(t, un)).converter, e, n), s = Rn(Pn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return Ye(Xe(t.firestore), [ s.toMutation(t._key, _e.none()) ]);\n}\n\nfunction vr(t, e, n, ...r) {\n    const s = Pn((t = rt(t, un)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof mn ? xn(s, \"updateDoc\", t._key, e, n, r) : qn(s, \"updateDoc\", t._key, e);\n    return Ye(Xe(t.firestore), [ i.toMutation(t._key, _e.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Er(t) {\n    return Ye(Xe((t = rt(t, un)).firestore), [ new Ee(t._key, _e.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Tr(t, e) {\n    const n = fn(t = rt(t, an)), r = pr(t.converter, e), s = Rn(Pn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return Ye(Xe(t.firestore), [ s.toMutation(n._key, _e.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Ir() {\n    return new Vn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Ar() {\n    return new Nn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Pr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new $n(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Rr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Fn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Vr(t) {\n    return new Sn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class Dr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Pn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = Nr(t, this._firestore), s = pr(r.converter, e, n), i = Rn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, _e.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = Nr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof mn ? xn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : qn(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, _e.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = Nr(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Ee(e._key, _e.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new L($, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction Nr(t, e) {\n    if ((t = getModularInstance(t)).firestore !== e) throw new L(I, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function $r(t) {\n    const e = Xe(t = rt(t, en));\n    return new Dr(t, (t => Ye(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class Fr {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new L(I, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await Ke(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Ee(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = Z.fromPath(e);\n            this.mutations.push(new Te(n, this.precondition(n)));\n        })), await Ye(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw _();\n            // For deleted docs, we must use baseVersion 0 when we overwrite them.\n            e = yt.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new L(F, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? _e.updateTime(e) : _e.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(yt.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new L(I, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return _e.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return _e.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass Sr {\n    constructor(t, e, n, r) {\n        this.asyncQueue = t, this.datastore = e, this.updateFunction = n, this.deferred = r, \n        this.Et = 5, this.Tt = new We(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.Et -= 1, this.It();\n    }\n    It() {\n        this.Tt.G((async () => {\n            const t = new Fr(this.datastore), e = this.At(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.Pt(t);\n                }))));\n            })).catch((t => {\n                this.Pt(t);\n            }));\n        }));\n    }\n    At(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !it(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    Pt(t) {\n        this.Et > 0 && this.Rt(t) ? (this.Et -= 1, this.asyncQueue.enqueueAndForget((() => (this.It(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Rt(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return _();\n\n                  case E:\n                  case T:\n                  case A:\n                  case N:\n                  case x:\n                  case O:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case D:\n                    return !1;\n\n                  case I:\n                  case P:\n                  case R:\n                  case V:\n                  case $:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case F:\n                  case S:\n                  case q:\n                  case C:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function qr() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class xr {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new U, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new xr(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new L(E, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Or {\n    constructor() {\n        // The last promise in the queue.\n        this.Vt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Dt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.Nt = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.$t = [], \n        // visible for testing\n        this.Ft = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.St = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.qt = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.xt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.Tt = new We(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Ot = () => {\n            const t = qr();\n            t && w(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.Tt.H();\n        };\n        const t = qr();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Ot);\n    }\n    get isShuttingDown() {\n        return this.Nt;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ct(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.Lt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.Nt) {\n            this.Nt = !0, this.qt = t || !1;\n            const e = qr();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Ot);\n        }\n    }\n    enqueue(t) {\n        if (this.Ct(), this.Nt) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new U;\n        return this.Lt((() => this.Nt && this.qt ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Dt.push(t), this.Ut())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async Ut() {\n        if (0 !== this.Dt.length) {\n            try {\n                await this.Dt[0](), this.Dt.shift(), this.Tt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                w(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Dt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.Tt.G((() => this.Ut()));\n        }\n    }\n    Lt(t) {\n        const e = this.Vt.then((() => (this.St = !0, t().catch((t => {\n            this.Ft = t, this.St = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw m(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.St = !1, t))))));\n        return this.Vt = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ct(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.xt.indexOf(t) > -1 && (e = 0);\n        const r = xr.createAndSchedule(this, t, e, n, (t => this.jt(t)));\n        return this.$t.push(r), r;\n    }\n    Ct() {\n        this.Ft && _();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async kt() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.Vt, await t;\n        } while (t !== this.Vt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Bt(t) {\n        for (const e of this.$t) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Mt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.kt().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.$t.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.$t) if (e.skipDelay(), \"all\" /* All */ !== t && e.timerId === t) break;\n            return this.kt();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Qt(t) {\n        this.xt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    jt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.$t.indexOf(t);\n        this.$t.splice(e, 1);\n    }\n}\n\nclass Cr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Pn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = Nr(t, this._firestore), n = new yr(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return _();\n            const r = t[0];\n            if (r.isFoundDocument()) return new Gn(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new Gn(this._firestore, n, e._key, null, e.converter);\n            throw _();\n        }));\n    }\n    set(t, e, n) {\n        const r = Nr(t, this._firestore), s = pr(r.converter, e, n), i = Rn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = Nr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof mn ? xn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : qn(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = Nr(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function Lr(t, e) {\n    const n = Xe(t = rt(t, en)), r = new U;\n    return new Sr(new Or, n, (n => e(new Cr(t, n))), r).run(), r.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    l = t;\n}(`${SDK_VERSION}_lite`), _registerComponent(new Component(\"firestore/lite\", ((t, {options: e}) => {\n    const n = t.getProvider(\"app\").getImmediate(), r = new en(n, new M(t.getProvider(\"auth-internal\")));\n    return e && r._setSettings(e), r;\n}), \"PUBLIC\" /* PUBLIC */)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.3.0\", \"\"), registerVersion(\"firestore-lite\", \"3.3.0\", \"esm2017\");\n\nexport { yn as Bytes, an as CollectionReference, un as DocumentReference, Gn as DocumentSnapshot, mn as FieldPath, _n as FieldValue, en as Firestore, L as FirestoreError, gn as GeoPoint, cn as Query, Jn as QueryConstraint, Wn as QueryDocumentSnapshot, Hn as QuerySnapshot, pt as Timestamp, Cr as Transaction, Dr as WriteBatch, Tr as addDoc, Rr as arrayRemove, Pr as arrayUnion, hn as collection, ln as collectionGroup, sn as connectFirestoreEmulator, Er as deleteDoc, Ir as deleteField, fn as doc, pn as documentId, lr as endAt, hr as endBefore, _r as getDoc, gr as getDocs, rn as getFirestore, Vr as increment, nn as initializeFirestore, sr as limit, ir as limitToLast, nr as orderBy, Zn as query, wn as queryEqual, dn as refEqual, Lr as runTransaction, Ar as serverTimestamp, br as setDoc, d as setLogLevel, Yn as snapshotEqual, cr as startAfter, ur as startAt, on as terminate, vr as updateDoc, tr as where, $r as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n","import { initializeApp } from \"firebase/app\"\r\nimport { getFirestore } from \"firebase/firestore/lite\"\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBc28HTMm_ONP_9AOOCGa1A24rvHvy_F2A\",\r\n  authDomain: \"kidzionic.firebaseapp.com\",\r\n  databaseURL: \"https://kidzionic.firebaseio.com\",\r\n  projectId: \"kidzionic\",\r\n  storageBucket: \"kidzionic.appspot.com\",\r\n  messagingSenderId: \"855755453045\",\r\n  appId: \"1:855755453045:web:3556b9685d2b639e583e3c\",\r\n  measurementId: \"G-WPSM3YR06M\",\r\n}\r\nconst app = initializeApp(config)\r\nconst fireDb = getFirestore(app)\r\nexport { fireDb }\r\n","import { fireDb } from \"./firebase\"\r\nimport { collection, getDocs, doc, getDoc, query, where } from \"firebase/firestore/lite\"\r\n\r\nexport default class functionsFirebase {\r\n  loadCollection(coleccion) {\r\n    return collection(fireDb, coleccion)\r\n  }\r\n\r\n  queryWithCollection(coleccion, field, condition, value) {\r\n    return query(this.loadCollection(coleccion), where(field, condition, value))\r\n  }\r\n\r\n  getDocsWithQuery(colecion, field, condition, value) {\r\n    return getDocs(this.queryWithCollection(colecion, field, condition, value))\r\n  }\r\n\r\n  getAllDocsWithCollection(coleccion) {\r\n    return getDocs(this.loadCollection(coleccion))\r\n  }\r\n\r\n  getOneDocWithCollection(coleccion, id) {\r\n    return getDoc(doc(this.loadCollection(coleccion), id))\r\n  }\r\n\r\n  loadDoc(documento) {\r\n    return getDoc(documento)\r\n  }\r\n}\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar ownKeys = require('../internals/own-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar createProperty = require('../internals/create-property');\n\n// `Object.getOwnPropertyDescriptors` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIndexedObject(object);\n    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var index = 0;\n    var key, descriptor;\n    while (keys.length > index) {\n      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);\n      if (descriptor !== undefined) createProperty(result, key, descriptor);\n    }\n    return result;\n  }\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });\nvar FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\n$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);\n  }\n});\n"],"sourceRoot":""}